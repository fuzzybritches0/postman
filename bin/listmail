#!/bin/bash

create_sort_sh() {
	echo '# The following two lines demonstrate how to filter incoming mail into'
	echo '# different directories.'
	echo '#[ "$( echo "${subject,,}" | grep "linux fan club" )" ] && dir="linux-fan-club"'
	echo '#[ "$( echo "${from,,}" | grep "max.maier@gmail.com" )" ] && dir="max_maier"'
}

create_config_sh() {
	echo '# Configuration'
	echo '# Please provide your email addresses and name.'
	echo '# Uncomment the following two lines and fill out.'
	echo '#email="emailaddress@example.com"'
	echo '#name="Mr So And So"'
	echo 'mailfolder="${HOME}/Mail"'
}

[ ! -d "${HOME}/.config/postman" ] && mkdir -p "${HOME}/.config/postman"
[ ! -f "${HOME}/.config/postman/sort.sh" ] && create_sort_sh > "${HOME}/.config/postman/sort.sh"
if [ ! -f "${HOME}/.config/postman/config.sh" ]; then
	create_config_sh > "${HOME}/.config/postman/config.sh"
	echo "ERROR: please fill out: ${HOME}/.config/postman/config.sh!"
	exit 1
fi

. "${HOME}/.config/postman/config.sh"

[ ! "${mailfolder}" ] && echo "mailfolder= not set in ${HOME}/.config/postman/config.sh!" && exit 1
[ ! "${email}" ] && echo "email= not set in ${HOME}/.config/postman/config.sh!" && exit 1
[ ! "${name}" ] && echo "name= not set in ${HOME}/.config/postman/config.sh!" && exit 1

emaila() {
	all="${@}"
	ret=
	for word in ${all}; do
		if [ "${word/@}" != "${word}" ]; then
			word="${word//<}"
			word="${word//>}"
			word="${word//,}"
			ret="${ret} ${word}"
		fi
	done
	echo ${ret}
}

count_email() {
	count=0
	for emailc in ${@}; do
		[ "${emailc/@}" != "${emailc}" ] && (( count++ ))
	done
	echo ${count}
}

foreach_elm() {
	size="${#@}"
	count=0
	for elm in ${@}; do
		(( count++ ))
		echo -n " ${elm}"
		[ "${size}" != "${count}" ] && echo
	done
	echo
}

foreach_email() {
	size="${#@}"
	count=0
	for emailc in ${@}; do
		(( count++ ))
		echo -n "${emailc}"
		[ "${size}" != "${count}" ] && \
			echo "," && echo -n "    "
	done
	echo
}

head_reply() {
	if [ "${header[1]}" ]; then
		cc="$(emaila ${header[1]})"
		cc="${cc/${email}}"
		echo -n "Cc: " && foreach_email ${cc}
	fi
	if [ "${header[2]/${email}}" != "${header[2]}" ]; then
		from=" \"${name}\" <${email}>"
		to="${header[0]}"
	else
		count="$(count_email ${header[0]})"
		if [ "${count}" == "1" ]; then
			from=" \"${name}\" <${email}>"
			to="$(emaila ${header[2]})"
			[ "${header[0]/${email}}" == "${header[0]}" ] && to="${to} $(emaila ${header[0]})"
		else
			from=" \"${name}\" <${email}>"
			to="$(emaila ${header[0]})"
			to="${to/${email}}"
		fi
	fi

	echo -n "To: " && foreach_email ${to}
	echo "From:${from}"
	echo "Message-ID: <${RANDOM}-${RANDOM}-${USER}@${HOSTNAME}>"
	echo "In-Reply-To:${header[5]}"
	echo "References:$(foreach_elm ${header[6]} ${header[5]})"
	echo "Date: $(date -R)"
	echo "Subject:${header[4]}"
	echo
	echo "On${header[3]},${header[2]} wrote:"
}

reply() {
	head=1
	while IFS= read line; do
		[ ! "${head}" ] && echo "> ${line}"
		if [ "${head}" ]; then
			[ "${line:0:1}"  != " " ] && pointer=
			[ "${#line}"  -le "1" ] && head_reply && head=
			[ "${line:0:3}"  == "To:" ] && header[0]="${line:3}" && pointer=0
			[ "${line:0:3}"  == "Cc:" ] && header[1]="${line:3}" && pointer=1
			[ "${line:0:5}"  == "From:" ] && header[2]="${line:5}" && pointer=2
			[ "${line:0:5}"  == "Date:" ] && header[3]="${line:5}" && pointer=3
			[ "${line:0:8}"  == "Subject:" ] && header[4]="${line:8}" && pointer=4
			[ "${line:0:11}"  == "Message-ID:" ] && header[5]="${line:11}" && pointer=5
			[ "${line:0:11}"  == "References:" ] && header[6]="${line:11}" && pointer=6
			[ "${line:0:1}"  == " " ] &&\
				[ "${pointer}" ] && header[${pointer}]="${header[${pointer}]}${line}"
		fi	
	done
}

process_head() {
	pointer=
	head=1
	while IFS= read line; do
		if [ "${head}" ]; then
			[ "${line:0:1}"  != " " ] && pointer=
			[ "${#line}"  -le "1" ] && head=
			[ "${line:0:5}"  == "Date:" ] && header[0]="${line:5}" && pointer=0
			[ "${line:0:5}"  == "From:" ] && header[1]="${line:5}" && pointer=1
			[ "${line:0:8}"  == "Subject:" ] && header[2]="${line:8}" && pointer=2
			[ "${line:0:1}"  == " " ] &&\
				[ "${pointer}" ] && header[${pointer}]="${header[${pointer}]}${line}"
		fi
	done
	echo "::: ${header[2]}"
	echo "${header[1]} ::: ${header[0]}"
	echo
}

if [ "$( basename ${0} )" == "getmail" ]; then
	cd "${mailfolder}" && fetchmail -s -K -r Inbox || exit ${?}
	listmail ./new
	echo
	exit 0
fi

[ ! "${1}" ] || [ ! -d "${1}" ] && echo "no valid mail folder!" && exit 1

count=0
for file in ${1}/*; do
	if [ "${file}" != "${1}/*" ]; then
		if [ "$( basename ${0} )" == "readmail" ] && [ "${count}" -eq "${2}" ]; then
			vim -R ${file}
			exit 0
		elif [ "$( basename ${0} )" == "rmmail" ] && [ "${count}" -eq "${2}" ]; then
			rm ${file}
			exit 0
		elif [ "$( basename ${0} )" == "replymail" ] && [ "${count}" -eq "${2}" ]; then
			filere="${file/.eml}_reply.eml"
			filere="$( basename "${filere}" )"
			filere="${mailfolder}/draft/${filere}"
			cat "${file}" | reply > "${filere}"
			vim "${filere}"
			sendmail "${filere}"
			exit 0
		elif [ "$( basename ${0} )" == "listmail" ] && [ ! -d "${file}" ]; then
			echo -n "${count} "
			cat "${file}" | process_head "${count}"
		elif [ -d "${file}" ]; then
			echo "DIRECTORY: ${file}"
		fi
		(( count++ ))
	fi
done

[ "$( basename ${0} )" == "countmail" ] && echo "${count}"
